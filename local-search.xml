<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>典型的代数结构</title>
    <link href="/2023/09ec1c1d6a.html"/>
    <url>/2023/09ec1c1d6a.html</url>
    
    <content type="html"><![CDATA[<h1>第六章 典型的代数系统</h1><h2 id="6-1-群、环和域">6.1 群、环和域</h2><h3 id="6-1-1-半群和独异点">6.1.1 半群和独异点</h3><h4 id="定义">定义</h4><ul><li>对于代数系统$V=&lt;S,\cdot&gt;$，若$\cdot$<strong>可结合</strong>，则$V$为半群。<br>进一步，若半群$V$具有<strong>单位元</strong>，则称$V$为独异点。</li><li>典型的半群有$&lt;Z^{+},+&gt;,&lt;N,+&gt;,&lt;Z,+&gt;,&lt;Q,+&gt;,&lt;R,+&gt;$等。</li></ul><h3 id="6-1-2-群">6.1.2 群</h3><h4 id="定义-2">定义</h4><ul><li>对于代数系统$&lt;G,\cdot&gt;$，若$\cdot$<strong>可结合</strong>，存在<strong>单位元$e\in G$</strong>，且对于$G$中的任意元素$x$都有$x^{-1}\in G$，则称$G$为群。</li><li>典型的群有$&lt;Z,+&gt;,&lt;Q,+&gt;,&lt;R,+&gt;,&lt;Z_{n},\oplus&gt;$</li><li><em>有限群</em>：群$G$为有穷集，如$&lt;Z_6,\oplus&gt;$，其中$|G|$称为<strong>群的阶</strong><br><em>无限群</em>：群$G$为无穷集，如$&lt;Z,+&gt;,&lt;Q,+&gt;,&lt;R,+&gt;$是无限群<br><em>平凡群</em>：只含单位元的群，如$&lt;\lbrace0\rbrace,+&gt;,&lt;\lbrace1\rbrace,\times&gt;$<br><em>交换群/Abel群</em>：群中的二元运算<strong>可交换</strong></li><li><strong>群中元素的阶</strong>：$x\in G$，使得$x^{k}=e$成立的最小<strong>正整数</strong>$k$称为$x$的阶，记作$|x|=k$，此时$x$称为$k$阶元。若不存在这样的$k$，则$x$称为无限阶元<ul><li>$&lt;Z,+&gt;$中，$|0|=1$</li><li>$&lt;Z_{6},\oplus&gt;$中，<br>$|0|=1,|1|=|5|=6,|2|=|4|=3,|3|=2$</li></ul></li></ul><blockquote><p>q：如果$G$是有限群，那么$G$包括无限阶元吗？<br>a：若$G$为有限群，$\forall a\in G$为无限阶元，则<br>$$\lbrace a^{-\infty}…a^{-1},a^{0},a^{1},a^{2}…a^{\infty}\rbrace \subset G$$<br>且$ a^{-\infty}\not = … \not = a^{-1} \not = a^{0} \not = a^{1} \not = a^{2} \not = …\not = a^{\infty}$<br>(若$\exists n,m\in Z$，且$n\not = m$，有$a^{n}=a^{m}\Rightarrow a^{|n-m|}=e$，与已知矛盾)<br>即，无限阶元会产生无穷个元素，显然$G$不可能是有限群</p></blockquote><h4 id="一些性质">一些性质</h4><ul><li><p>$\forall x\in G,x^{n}$定义如下：</p><ul><li>$x^{0}=e$</li><li>$x^{n+1}=x^{n}x,n\in N$</li><li>$x^{-n}=(x^{-1})^{n}$</li></ul></li><li><p>$G$中幂运算满足：</p><ul><li>$\forall a \in G,(a^{-1})^{-1}=a$</li><li>$\forall a,b \in G,(ab)^{-1}=b^{-1}a^{-1}$</li><li>$\forall a \in G,a^{n}a^{m}=a^{n+m}$</li><li>$\forall a \in G,(a^{n})^{m}=a^{nm}$</li></ul></li><li><p>$\forall a,b \in G$，方程$ax=b$和$ya==b$在G中有解，且唯一<br>$$a(a^{-1}b)=(aa^{-1})b=eb=b$$</p><p>若$c$是方程的解，则$c=(aa^{-1})c=a^{-1}(ac)=a^{-1}b$</p></li><li><p>$G$为群，则$G$满足消去律，即$\forall a,b,c\in G$,有<br>$$ab=ac \Rightarrow b=c \<br>ba=ca \Rightarrow b=c$$</p></li><li><p>设$G$为群，$a\in G$，且$|a|=r$，则</p><ul><li><p>$a^{k}=e$的充分必要条件为 $r|k$<br>必要性：已知$a^{k}=e$，由除法得$k=pr+q(0\le q \le r-1,p\in Z)$，从而<br>$$a^q=ea^{q}=(a^r)^{p}a^{q}=a^{k}=e$$</p><p>因此$q=0$</p></li><li><p>$|a|=|a^{-1}|$<br>$|a^{-1}|=t$，则$(a^{-1})^{r}=(a^r)^{-1}=e$，则$t|r$<br>同理可证$r|t$，因此$t=r$</p></li><li><p>$r\le|G|$<br>已知$|a|=r$，则<br>$$a^{0} \not = a^{1} \not = a^{2}\not = …\not = a^{r-1} \<br>a^{r}=a^{0},a^{r+1}=a^{1},…,a^{2r-1}=a^{r-1} \<br>a^{-1}=a^{r-1},a^{-2}=a^{r-2},…,a^{-r}=a^{0}<br>$$</p><p>且$\lbrace a^{0},…,a^{r-1}\rbrace\subset G$,即$r\le|G|$</p></li></ul></li></ul><h4 id="Klein-四元群">$Klein$四元群</h4><p>$$<br>\def\arraystretch{1.25}<br>\begin{array}{c|c c}<br>\cdot &amp; e &amp; a &amp; b &amp; c \cr\hline<br>e &amp; e &amp; a &amp; b &amp; c\cr<br>a &amp; a &amp; e &amp; c &amp; b\cr<br>b &amp; b &amp; c &amp; e &amp; a\cr<br>c &amp; c &amp; b &amp; a &amp; e<br>\end{array}<br>$$</p><ul><li>单位元$e$</li><li>每一个元素的逆元都是自身</li><li>$a,b,c$中任意2个元素运算$\cdot$结果是另外一个</li><li>群中元素的阶：$|e|=1,|a|=|b|=|c|=2$</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何将excel数据转换为共现矩阵？</title>
    <link href="/2023/08c13cf946.html"/>
    <url>/2023/08c13cf946.html</url>
    
    <content type="html"><![CDATA[<p>在社会网络分析中，通常会用到ucinet、gephi等软件进行分析，这类软件支持的数据导入格式较为常用的是<strong>矩阵</strong>形式，而对于整理好的excel数据转化为矩阵，手动操作较为困难。本文会介绍如何利用python将excel形式的数据转化为<strong>共现矩阵</strong>，从而利用ucinet、gephi开始分析。</p><h1>数据格式</h1><ul><li>一模矩阵：即只对一种类型的对象（如演员合作网络、文本共词网络等）进行分析<br>格式如下：分隔符不一定是<code>,</code>，但得有分隔符。</li></ul><table><thead><tr><th style="text-align:center">a,c,b</th></tr></thead><tbody><tr><td style="text-align:center">b,d,</td></tr><tr><td style="text-align:center">e,a,c</td></tr><tr><td style="text-align:center">d,c</td></tr></tbody></table><ul><li>二模矩阵：收集到的数据包含两种对象（如第一列是导演，第二列是演员），想分析导演之间或演员之间的合作关系<br>格式如下：分隔符不一定是<code>,</code>，但得有分隔符。</li></ul><table><thead><tr><th style="text-align:center">jack,lucy</th><th style="text-align:center">a,b,c,d,a</th></tr></thead><tbody><tr><td style="text-align:center">molly,lucy,bob</td><td style="text-align:center">b,a</td></tr><tr><td style="text-align:center">bob,joe</td><td style="text-align:center">d,c,e</td></tr><tr><td style="text-align:center">ross,bob,molly</td><td style="text-align:center">c,d,a</td></tr></tbody></table><h1>实现方法</h1><p>主要使用pandas和re库实现(没有下载的话请<code>pip install pandas</code>，<code>pip install re</code>)<br>将单词分隔开添加到名称集合里（去重），转换为列表再遍历列表数据即可。</p><ul><li>单词之间的分隔用正则表达式</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p><strong>如果使用其他分隔符如<code>;，。.</code>，替换即可:</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">re.split(<span class="hljs-string">r&#x27;[;，。.]&#x27;</span>,row_data[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><ul><li>对二模矩阵做了转一模矩阵处理，附加在表格后续表单中</li></ul><h1>代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> re<br><br>a=pd.read_excel(<span class="hljs-string">&quot;target.xlsx&quot;</span>,header=<span class="hljs-literal">None</span>,index_col=<span class="hljs-literal">None</span>)<br><span class="hljs-comment">#如果第一行作为列名，改为：heade=0</span><br><span class="hljs-comment">#如果第一列作为行名，改为：index_col=0</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(a.columns)==<span class="hljs-number">1</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;构建一模共现矩阵&quot;</span>)<br>    name_set=<span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> row_name,row_data <span class="hljs-keyword">in</span> a.iterrows():<br>        t=re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">0</span>].strip())<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t):<br>            t.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t:<br>            name_set.add(i)<br>    name_list=<span class="hljs-built_in">list</span>(name_set)<br>    name_list.sort()<br>    b=pd.DataFrame(<span class="hljs-number">0</span>,index=name_list,columns=name_list)<br>    <span class="hljs-keyword">for</span> row_name,row_data <span class="hljs-keyword">in</span> a.iterrows():<br>        t=<span class="hljs-built_in">set</span>(re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">0</span>].strip()))<br>        t=<span class="hljs-built_in">list</span>(t)<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t):<br>            t.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">for</span> index,data <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(t):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> t[index+<span class="hljs-number">1</span>:]:<br>                b.loc[data,j]+=<span class="hljs-number">1</span><br>                b.loc[j,data]+=<span class="hljs-number">1</span><br>    writer=pd.ExcelWriter(<span class="hljs-string">&#x27;result.xlsx&#x27;</span>)<br>    b.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;一模矩阵&#x27;</span>)<br>    writer._save()<br><br><span class="hljs-keyword">elif</span>(<span class="hljs-built_in">len</span>(a.columns)==<span class="hljs-number">2</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;构建二模共现矩阵&quot;</span>)<br>    name1_set=<span class="hljs-built_in">set</span>()<br>    name2_set=<span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> row_name,row_data <span class="hljs-keyword">in</span> a.iterrows():<br>        t1=re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">0</span>].strip())<br>        t2=re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">1</span>].strip())<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t1):<br>            t1.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t2):<br>            t2.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t1:<br>            name1_set.add(i)<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> t2:<br>            name2_set.add(j)<br>        <br>    name1_list=<span class="hljs-built_in">list</span>(name1_set)<br>    name1_list.sort()<br>    name2_list=<span class="hljs-built_in">list</span>(name2_set)<br>    name2_list.sort()<br>    b=pd.DataFrame(<span class="hljs-number">0</span>,index=name1_list,columns=name2_list)<br>    <span class="hljs-keyword">for</span> row_name,row_data <span class="hljs-keyword">in</span> a.iterrows():<br>        t1=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">0</span>].strip())))<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t1:<br>            t1.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        t2=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(re.split(<span class="hljs-string">r&#x27;[,]&#x27;</span>,row_data[<span class="hljs-number">1</span>].strip())))<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">in</span> t2:<br>            t2.remove(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t1:<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> t2:<br>                b.loc[i,j]+=<span class="hljs-number">1</span><br>    writer=pd.ExcelWriter(<span class="hljs-string">&#x27;result.xlsx&#x27;</span>)<br>    b.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;二模矩阵&#x27;</span>)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二模矩阵构建完成!\n转一模ing(第一列标签)...&quot;</span>)<br>    c=pd.DataFrame(<span class="hljs-number">0</span>,index=name1_list,columns=name1_list)<br>    <span class="hljs-keyword">for</span> i,data <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(name1_list):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> name1_list[i+<span class="hljs-number">1</span>:]:<br>            c.loc[data,j]=<span class="hljs-built_in">sum</span>(b.loc[data]*b.loc[j])<br>            c.loc[j,data]=c.loc[data,j]<br>    c.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;第一列标签的一模矩阵&#x27;</span>)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;转一模ing(第一行标签)...&quot;</span>)<br>    d=pd.DataFrame(<span class="hljs-number">0</span>,index=name2_list,columns=name2_list)<br>    <span class="hljs-keyword">for</span> i,data <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(name2_list):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> name2_list[i+<span class="hljs-number">1</span>:]:<br>            d.loc[data,j]=<span class="hljs-built_in">sum</span>(b[data]*b[j])<br>            d.loc[j,data]=d.loc[data,j]<br>    d.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;第一行标签的一模矩阵&#x27;</span>)<br>    writer._save()<br></code></pre></td></tr></table></figure><ul><li><p>结果展示</p><ul><li>一模共现矩阵：</li></ul><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th><th>e</th></tr></thead><tbody><tr><td>a</td><td>0</td><td>1</td><td>2</td><td>0</td><td>1</td></tr><tr><td>b</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr><tr><td>c</td><td>2</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>d</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td>e</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td></tr></tbody></table><ul><li><p>二模共现矩阵:</p><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th><th>e</th></tr></thead><tbody><tr><td>bob</td><td>2</td><td>1</td><td>2</td><td>2</td><td>1</td></tr><tr><td>jack</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>joe</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td></tr><tr><td>lucy</td><td>2</td><td>2</td><td>1</td><td>1</td><td>0</td></tr><tr><td>molly</td><td>2</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>ross</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><ul><li>转一模后矩阵：</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">bob</th><th style="text-align:center">jack</th><th style="text-align:center">joe</th><th style="text-align:center">lucy</th><th style="text-align:center">molly</th><th style="text-align:center">ross</th></tr></thead><tbody><tr><td style="text-align:center">bob</td><td style="text-align:center">0</td><td style="text-align:center">7</td><td style="text-align:center">5</td><td style="text-align:center">10</td><td style="text-align:center">9</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">jack</td><td style="text-align:center">7</td><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">6</td><td style="text-align:center">5</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">joe</td><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">lucy</td><td style="text-align:center">10</td><td style="text-align:center">6</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">8</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">molly</td><td style="text-align:center">9</td><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">8</td><td style="text-align:center">0</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">ross</td><td style="text-align:center">6</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">4</td><td style="text-align:center">4</td><td style="text-align:center">0</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">a</th><th style="text-align:center">b</th><th style="text-align:center">c</th><th style="text-align:center">d</th><th style="text-align:center">e</th></tr></thead><tbody><tr><td style="text-align:center">a</td><td style="text-align:center">0</td><td style="text-align:center">9</td><td style="text-align:center">10</td><td style="text-align:center">10</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">9</td><td style="text-align:center">0</td><td style="text-align:center">6</td><td style="text-align:center">6</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">10</td><td style="text-align:center">6</td><td style="text-align:center">0</td><td style="text-align:center">9</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">d</td><td style="text-align:center">10</td><td style="text-align:center">6</td><td style="text-align:center">9</td><td style="text-align:center">0</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">e</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">3</td><td style="text-align:center">3</td><td style="text-align:center">0</td></tr></tbody></table></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>社会网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 886 Div.4 记录A-F</title>
    <link href="/2023/075d3fe4de.html"/>
    <url>/2023/075d3fe4de.html</url>
    
    <content type="html"><![CDATA[<h2 id="A-To-My-Critics"><a href="https://codeforces.com/contest/1850/problem/A">A. To My Critics</a></h2><p>给出三个数，判断能否有两个数相加大于等于10</p><h3 id="input">input</h3><p>t(1&lt;=t&lt;=1000)组测试用例<br>a,b,c(0&lt;=a,b,c&lt;=9)</p><h3 id="output">output</h3><p>能输出&quot;YES&quot;,否则输出&quot;NO&quot;</p><h3 id="思路">思路</h3><p>水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">while</span>(n--)<br>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br><span class="hljs-keyword">if</span>(a+b&gt;=<span class="hljs-number">10</span>||b+c&gt;=<span class="hljs-number">10</span>||a+c&gt;=<span class="hljs-number">10</span>)<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;YES&quot;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;NO&quot;</span>); <br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-Ten-Words-of-Wisdom"><a href="https://codeforces.com/contest/1850/problem/B">B. Ten Words of Wisdom</a></h2><p>给出n个数对a,b，输出a不大于10的数对中的b最大的数对的序号</p><h3 id="input-2">input</h3><p>t(1&lt;=t&lt;=100)组测试用例<br>n(1&lt;=n&lt;=50)<br>a[i],b[i]分别代表数字，序号</p><h3 id="output-2">output</h3><p>序号</p><h3 id="思路-2">思路</h3><p>水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> t;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-type">int</span> maxn=<span class="hljs-number">-1e9</span>,ans=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b;<br><span class="hljs-keyword">if</span>(a&lt;=<span class="hljs-number">10</span>)&#123;<br><span class="hljs-keyword">if</span>(b&gt;maxn)&#123;<br>maxn=b;<br>ans=i;<br>&#125;<br>&#125;<br>&#125;<br>cout&lt;&lt;ans&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-Word-on-the-Paper"><a href="https://codeforces.com/contest/1850/problem/C">C. Word on the Paper</a></h2><p>给出t组8*8的方格，每一个方格某一列有信息，其余都是&quot;.&quot;符号，要求输出全部信息</p><h3 id="input-3">input</h3><p>t(1&lt;=t&lt;=1000)组测试用例<br>8x8方格</p><h3 id="output-3">output</h3><p>信息</p><h3 id="思路-3">思路</h3><p>水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">10</span>;<br><span class="hljs-type">char</span> m[N][N];<br><span class="hljs-type">int</span> t;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">8</span>;i++)<br>&#123;<br>cin&gt;&gt;m[i]+<span class="hljs-number">1</span>;<br>&#125;<br>string s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">8</span>;i++)<br>&#123;<br><span class="hljs-type">bool</span> flag=<span class="hljs-literal">false</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">8</span>;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(m[j][i]!=<span class="hljs-string">&#x27;.&#x27;</span>)&#123;<br>flag=<span class="hljs-literal">true</span>;<br>s+=m[j][i];<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag)<span class="hljs-keyword">break</span>;<br>&#125;<br>cout&lt;&lt;s&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-Balanced-Round"><a href="https://codeforces.com/contest/1850/problem/D">D. Balanced Round</a></h2><p>有n个问题，每一个问题有难度ai。每次可以进行操作：<br>1.移除一个问题(或不移动)<br>2.重新排列问题<br>求最少经过几次操作，使得每两个问题之间的难度差不大于k</p><h3 id="input-4">input</h3><p>t(1&lt;=t&lt;=1000)组测试用例<br>n(1到2e5),k(1到1e9)<br>ai(1&lt;=i&lt;=n)</p><h3 id="output-4">output</h3><p>输出操作数</p><h3 id="思路-4">思路</h3><p>由于顺序可以重新排列，考虑先对问题按难度从小到大排序。计算每两个问题之间的难度差，找出<strong>最长的不大于k的子序列</strong>，剩下的序列就是要删除的，计算其长度即可。<br>举个例子：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tap">输入：<br>5 1<br>1<span class="hljs-number"> 2 </span>4<span class="hljs-number"> 5 </span>6<br>排序后计算差值<br>1<span class="hljs-number"> 2 </span>1<span class="hljs-number"> 1 </span> 最长为2<br>ans=4-2=2<br><br>输入：<br>8 1<br>8<span class="hljs-number"> 3 </span>1<span class="hljs-number"> 4 </span>5<span class="hljs-number"> 10 </span>7 3<br>排序后计算差值<br>2<span class="hljs-number"> 0 </span>1<span class="hljs-number"> 1 </span>2<span class="hljs-number"> 1 </span>2  最长为3<br>ans=7-3=4<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2e5</span>+<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> t,n,k;<br><span class="hljs-type">int</span> f[N],cha[N];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--) &#123;<br>cin&gt;&gt;n&gt;&gt;k;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; i++)<br>cin&gt;&gt;f[i];<br><span class="hljs-built_in">sort</span>(f+<span class="hljs-number">1</span>,f+n+<span class="hljs-number">1</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>&#123;<br>cha[i]=f[i]-f[i<span class="hljs-number">-1</span>];<br>&#125;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>) cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-type">int</span> len=<span class="hljs-number">0</span>,ans=<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(cha[i]&lt;=k)&#123;<br>len++;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,len);<br>len=<span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>ans=<span class="hljs-built_in">max</span>(ans,len);<br>cout&lt;&lt;n<span class="hljs-number">-1</span>-ans&lt;&lt;endl;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="E-Cardboard-for-Pictures"><a href="https://codeforces.com/contest/1850/problem/E">E. Cardboard for Pictures</a></h2><p>有n张正方形照片，每一张照片有长度si。现在要给照片装正方形相框（装在正中间）。给出相框和照片的总面积c，求出照片边到相框边的距离w（每一张照片,边到相框都是一样的距离）</p><h3 id="input-5">input</h3><p>t(1&lt;=t&lt;=1000)组测试用例<br>n(1到2e5),c(1到1e18)<br>si(1&lt;=i&lt;=n)</p><h3 id="output-5">output</h3><p>输出w</p><h3 id="思路-5">思路</h3><p>首先开long long<br>1.朴素做法：直接对w从1开始枚举，直到c==sum((si+w)^2),显然会tle。<br>2.考虑从1到1e9+10二分答案<br><strong>注意判断二分条件时，不要把所有(si+k)^2的和求出来再和c作比较，会爆long long（也不要用公式sumt = sqsum+4<em>mid</em>sum+4<em>mid</em>mid*n）。应该是枚举si时，判断当前sum+(si+k)^2或者(si+k)^2是否大于c</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2e5</span>+<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> t; <br>LL f[N];<br>LL p[N];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br>LL n,c;<br>cin&gt;&gt;n&gt;&gt;c;<br>LL sqsum=<span class="hljs-number">0</span>,sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>cin&gt;&gt;f[i];<br>sqsum+=f[i]*f[i];<br>sum+=f[i];<br>&#125;<br>        LL left = <span class="hljs-number">1</span>, right = <span class="hljs-number">1e9</span>+<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">while</span>(left&lt;right)<br>        &#123;<br>            LL mid = (left+right)/<span class="hljs-number">2</span>;<br>            <span class="hljs-type">bool</span> flag = <span class="hljs-literal">false</span>;<br>            LL sumt = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>;i&lt;=n;i++)<br>            &#123;<br>                LL t=(f[i]+<span class="hljs-number">2ULL</span>*mid)*(f[i]+<span class="hljs-number">2ULL</span>*mid);<br>                <span class="hljs-keyword">if</span>(t&gt;c||sumt+t&gt;c)&#123;<br>                    flag = <span class="hljs-literal">true</span>;<br>                    right = mid;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                sumt += t;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(flag) <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-comment">//sumt = sqsum+4ULL*mid*sum+4ULL*mid*mid*n;</span><br>            <span class="hljs-keyword">if</span>(sumt&lt;c) left = mid+<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span> right = mid;<br>        &#125;<br>        cout &lt;&lt; left &lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F-We-Were-Both-Children"><a href="https://codeforces.com/contest/1850/problem/F">F. We Were Both Children</a></h2><p>有n个数ai，请你找出1到n中在ai中具有最多因子的数。</p><h3 id="input-6">input</h3><p>t(1&lt;=t&lt;=100)组测试用例<br>n(1到2e5)<br>ai(1&lt;=i&lt;=n)</p><h3 id="output-6">output</h3><p>输出数</p><h3 id="思路-6">思路</h3><p>从1到n开始枚举，注意每一个数不用试除所有ai,而是枚举除数j从1到square(n)<br>若符合条件，cnt+=num[j]+num[i/j]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2e5</span>+<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> t;<br><span class="hljs-type">int</span> f[N];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">num</span><span class="hljs-params">(n+<span class="hljs-number">10</span>)</span></span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>cin&gt;&gt;f[i];<br><span class="hljs-keyword">if</span>(f[i]&lt;=n)<br>num[f[i]]++;<br>&#125;<br><span class="hljs-type">int</span> maxn=<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j*j&lt;=i;j++)<br>&#123;<br>                <span class="hljs-keyword">if</span>(i%j==<span class="hljs-number">0</span>)&#123;<br>                    <span class="hljs-keyword">if</span>(j*j==i)<br>                        cnt+=num[j];<br>                    <span class="hljs-keyword">else</span><br>                        cnt+=num[j]+num[i/j];<br>                &#125;<br>&#125;<br>maxn=<span class="hljs-built_in">max</span>(maxn,cnt);<br>&#125;<br>cout&lt;&lt;maxn&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
      <tag>codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
